"""
creates a virtual field on the entity that may be queried but cannot be set manually through the mappings API.
"""
directive @derivedFrom(field: String!) on FIELD_DEFINITION

"""
Marks the GraphQL type as indexable entity.  Each type that should be an entity is required to be annotated with this directive.
"""
directive @entity on OBJECT

"""Defined a Subgraph ID for an object type"""
directive @subgraphId(id: String!) on OBJECT

enum Aggregation_interval {
  day
  hour
}

type Bet {
  amount: BigInt!
  betIntId: BigInt!
  createdAt: BigInt!
  id: ID!
  isPayedOut: Boolean!
  optionIndex: BigInt!
  outcome: BetOutcome!
  pool: Pool!
  poolIntId: BigInt!
  tokenType: TokenType!
  txHash: String!
  userAddress: String!
}

enum BetOutcome {
  Draw
  Lost
  None
  Voided
  Won
}

type BetPlaced {
  amount: BigInt!
  bet: Bet!
  betId: BigInt!
  createdAt: BigInt!
  id: ID!
  optionIndex: BigInt!
  pool: Pool!
  poolId: BigInt!
  tokenType: TokenType!
  txHash: String!
  user: String!
}

input BetPlaced_filter {
  """Filter for the block changed event."""
  _change_block: BlockChangedFilter
  amount: BigInt
  amount_gt: BigInt
  amount_gte: BigInt
  amount_in: [BigInt!]
  amount_lt: BigInt
  amount_lte: BigInt
  amount_not: BigInt
  amount_not_in: [BigInt!]
  and: [BetPlaced_filter]
  bet: String
  betId: BigInt
  betId_gt: BigInt
  betId_gte: BigInt
  betId_in: [BigInt!]
  betId_lt: BigInt
  betId_lte: BigInt
  betId_not: BigInt
  betId_not_in: [BigInt!]
  bet_: Bet_filter
  bet_contains: String
  bet_contains_nocase: String
  bet_ends_with: String
  bet_ends_with_nocase: String
  bet_gt: String
  bet_gte: String
  bet_in: [String!]
  bet_lt: String
  bet_lte: String
  bet_not: String
  bet_not_contains: String
  bet_not_contains_nocase: String
  bet_not_ends_with: String
  bet_not_ends_with_nocase: String
  bet_not_in: [String!]
  bet_not_starts_with: String
  bet_not_starts_with_nocase: String
  bet_starts_with: String
  bet_starts_with_nocase: String
  createdAt: BigInt
  createdAt_gt: BigInt
  createdAt_gte: BigInt
  createdAt_in: [BigInt!]
  createdAt_lt: BigInt
  createdAt_lte: BigInt
  createdAt_not: BigInt
  createdAt_not_in: [BigInt!]
  id: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_in: [ID!]
  optionIndex: BigInt
  optionIndex_gt: BigInt
  optionIndex_gte: BigInt
  optionIndex_in: [BigInt!]
  optionIndex_lt: BigInt
  optionIndex_lte: BigInt
  optionIndex_not: BigInt
  optionIndex_not_in: [BigInt!]
  or: [BetPlaced_filter]
  pool: String
  poolId: BigInt
  poolId_gt: BigInt
  poolId_gte: BigInt
  poolId_in: [BigInt!]
  poolId_lt: BigInt
  poolId_lte: BigInt
  poolId_not: BigInt
  poolId_not_in: [BigInt!]
  pool_: Pool_filter
  pool_contains: String
  pool_contains_nocase: String
  pool_ends_with: String
  pool_ends_with_nocase: String
  pool_gt: String
  pool_gte: String
  pool_in: [String!]
  pool_lt: String
  pool_lte: String
  pool_not: String
  pool_not_contains: String
  pool_not_contains_nocase: String
  pool_not_ends_with: String
  pool_not_ends_with_nocase: String
  pool_not_in: [String!]
  pool_not_starts_with: String
  pool_not_starts_with_nocase: String
  pool_starts_with: String
  pool_starts_with_nocase: String
  tokenType: TokenType
  tokenType_in: [TokenType!]
  tokenType_not: TokenType
  tokenType_not_in: [TokenType!]
  txHash: String
  txHash_contains: String
  txHash_contains_nocase: String
  txHash_ends_with: String
  txHash_ends_with_nocase: String
  txHash_gt: String
  txHash_gte: String
  txHash_in: [String!]
  txHash_lt: String
  txHash_lte: String
  txHash_not: String
  txHash_not_contains: String
  txHash_not_contains_nocase: String
  txHash_not_ends_with: String
  txHash_not_ends_with_nocase: String
  txHash_not_in: [String!]
  txHash_not_starts_with: String
  txHash_not_starts_with_nocase: String
  txHash_starts_with: String
  txHash_starts_with_nocase: String
  user: String
  user_contains: String
  user_contains_nocase: String
  user_ends_with: String
  user_ends_with_nocase: String
  user_gt: String
  user_gte: String
  user_in: [String!]
  user_lt: String
  user_lte: String
  user_not: String
  user_not_contains: String
  user_not_contains_nocase: String
  user_not_ends_with: String
  user_not_ends_with_nocase: String
  user_not_in: [String!]
  user_not_starts_with: String
  user_not_starts_with_nocase: String
  user_starts_with: String
  user_starts_with_nocase: String
}

enum BetPlaced_orderBy {
  amount
  bet
  betId
  bet__amount
  bet__betIntId
  bet__createdAt
  bet__id
  bet__isPayedOut
  bet__optionIndex
  bet__outcome
  bet__poolIntId
  bet__tokenType
  bet__txHash
  bet__userAddress
  createdAt
  id
  optionIndex
  pool
  poolId
  pool__betsCloseAt
  pool__category
  pool__closureCriteria
  pool__closureInstructions
  pool__createdAt
  pool__creationTxHash
  pool__creatorId
  pool__creatorName
  pool__decisionTime
  pool__id
  pool__imageUrl
  pool__isDraw
  pool__originalTruthSocialPostId
  pool__pointsBetTotals
  pool__poolIntId
  pool__question
  pool__status
  pool__twitterPostId
  pool__usdcBetTotals
  pool__winningOption
  tokenType
  txHash
  user
}

input Bet_filter {
  """Filter for the block changed event."""
  _change_block: BlockChangedFilter
  amount: BigInt
  amount_gt: BigInt
  amount_gte: BigInt
  amount_in: [BigInt!]
  amount_lt: BigInt
  amount_lte: BigInt
  amount_not: BigInt
  amount_not_in: [BigInt!]
  and: [Bet_filter]
  betIntId: BigInt
  betIntId_gt: BigInt
  betIntId_gte: BigInt
  betIntId_in: [BigInt!]
  betIntId_lt: BigInt
  betIntId_lte: BigInt
  betIntId_not: BigInt
  betIntId_not_in: [BigInt!]
  createdAt: BigInt
  createdAt_gt: BigInt
  createdAt_gte: BigInt
  createdAt_in: [BigInt!]
  createdAt_lt: BigInt
  createdAt_lte: BigInt
  createdAt_not: BigInt
  createdAt_not_in: [BigInt!]
  id: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_in: [ID!]
  isPayedOut: Boolean
  isPayedOut_in: [Boolean!]
  isPayedOut_not: Boolean
  isPayedOut_not_in: [Boolean!]
  optionIndex: BigInt
  optionIndex_gt: BigInt
  optionIndex_gte: BigInt
  optionIndex_in: [BigInt!]
  optionIndex_lt: BigInt
  optionIndex_lte: BigInt
  optionIndex_not: BigInt
  optionIndex_not_in: [BigInt!]
  or: [Bet_filter]
  outcome: BetOutcome
  outcome_in: [BetOutcome!]
  outcome_not: BetOutcome
  outcome_not_in: [BetOutcome!]
  pool: String
  poolIntId: BigInt
  poolIntId_gt: BigInt
  poolIntId_gte: BigInt
  poolIntId_in: [BigInt!]
  poolIntId_lt: BigInt
  poolIntId_lte: BigInt
  poolIntId_not: BigInt
  poolIntId_not_in: [BigInt!]
  pool_: Pool_filter
  pool_contains: String
  pool_contains_nocase: String
  pool_ends_with: String
  pool_ends_with_nocase: String
  pool_gt: String
  pool_gte: String
  pool_in: [String!]
  pool_lt: String
  pool_lte: String
  pool_not: String
  pool_not_contains: String
  pool_not_contains_nocase: String
  pool_not_ends_with: String
  pool_not_ends_with_nocase: String
  pool_not_in: [String!]
  pool_not_starts_with: String
  pool_not_starts_with_nocase: String
  pool_starts_with: String
  pool_starts_with_nocase: String
  tokenType: TokenType
  tokenType_in: [TokenType!]
  tokenType_not: TokenType
  tokenType_not_in: [TokenType!]
  txHash: String
  txHash_contains: String
  txHash_contains_nocase: String
  txHash_ends_with: String
  txHash_ends_with_nocase: String
  txHash_gt: String
  txHash_gte: String
  txHash_in: [String!]
  txHash_lt: String
  txHash_lte: String
  txHash_not: String
  txHash_not_contains: String
  txHash_not_contains_nocase: String
  txHash_not_ends_with: String
  txHash_not_ends_with_nocase: String
  txHash_not_in: [String!]
  txHash_not_starts_with: String
  txHash_not_starts_with_nocase: String
  txHash_starts_with: String
  txHash_starts_with_nocase: String
  userAddress: String
  userAddress_contains: String
  userAddress_contains_nocase: String
  userAddress_ends_with: String
  userAddress_ends_with_nocase: String
  userAddress_gt: String
  userAddress_gte: String
  userAddress_in: [String!]
  userAddress_lt: String
  userAddress_lte: String
  userAddress_not: String
  userAddress_not_contains: String
  userAddress_not_contains_nocase: String
  userAddress_not_ends_with: String
  userAddress_not_ends_with_nocase: String
  userAddress_not_in: [String!]
  userAddress_not_starts_with: String
  userAddress_not_starts_with_nocase: String
  userAddress_starts_with: String
  userAddress_starts_with_nocase: String
}

enum Bet_orderBy {
  amount
  betIntId
  createdAt
  id
  isPayedOut
  optionIndex
  outcome
  pool
  poolIntId
  pool__betsCloseAt
  pool__category
  pool__closureCriteria
  pool__closureInstructions
  pool__createdAt
  pool__creationTxHash
  pool__creatorId
  pool__creatorName
  pool__decisionTime
  pool__id
  pool__imageUrl
  pool__isDraw
  pool__originalTruthSocialPostId
  pool__pointsBetTotals
  pool__poolIntId
  pool__question
  pool__status
  pool__twitterPostId
  pool__usdcBetTotals
  pool__winningOption
  tokenType
  txHash
  userAddress
}

scalar BigDecimal

scalar BigInt

input BlockChangedFilter {
  number_gte: Int!
}

input Block_height {
  hash: Bytes
  number: Int
  number_gte: Int
}

scalar Bytes

"8 bytes signed integer\n"
scalar Int8

enum MediaType {
  ExternalLink
  Facebook
  Image
  Instagram
  TikTok
  Video
  X
}

"""Defines the order direction, either ascending or descending"""
enum OrderDirection {
  asc
  desc
}

type PayoutClaimed {
  amount: BigInt!
  betId: BigInt!
  id: ID!
  poolId: BigInt!
  tokenType: TokenType!
  txHash: String!
  user: String!
}

input PayoutClaimed_filter {
  """Filter for the block changed event."""
  _change_block: BlockChangedFilter
  amount: BigInt
  amount_gt: BigInt
  amount_gte: BigInt
  amount_in: [BigInt!]
  amount_lt: BigInt
  amount_lte: BigInt
  amount_not: BigInt
  amount_not_in: [BigInt!]
  and: [PayoutClaimed_filter]
  betId: BigInt
  betId_gt: BigInt
  betId_gte: BigInt
  betId_in: [BigInt!]
  betId_lt: BigInt
  betId_lte: BigInt
  betId_not: BigInt
  betId_not_in: [BigInt!]
  id: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_in: [ID!]
  or: [PayoutClaimed_filter]
  poolId: BigInt
  poolId_gt: BigInt
  poolId_gte: BigInt
  poolId_in: [BigInt!]
  poolId_lt: BigInt
  poolId_lte: BigInt
  poolId_not: BigInt
  poolId_not_in: [BigInt!]
  tokenType: TokenType
  tokenType_in: [TokenType!]
  tokenType_not: TokenType
  tokenType_not_in: [TokenType!]
  txHash: String
  txHash_contains: String
  txHash_contains_nocase: String
  txHash_ends_with: String
  txHash_ends_with_nocase: String
  txHash_gt: String
  txHash_gte: String
  txHash_in: [String!]
  txHash_lt: String
  txHash_lte: String
  txHash_not: String
  txHash_not_contains: String
  txHash_not_contains_nocase: String
  txHash_not_ends_with: String
  txHash_not_ends_with_nocase: String
  txHash_not_in: [String!]
  txHash_not_starts_with: String
  txHash_not_starts_with_nocase: String
  txHash_starts_with: String
  txHash_starts_with_nocase: String
  user: String
  user_contains: String
  user_contains_nocase: String
  user_ends_with: String
  user_ends_with_nocase: String
  user_gt: String
  user_gte: String
  user_in: [String!]
  user_lt: String
  user_lte: String
  user_not: String
  user_not_contains: String
  user_not_contains_nocase: String
  user_not_ends_with: String
  user_not_ends_with_nocase: String
  user_not_in: [String!]
  user_not_starts_with: String
  user_not_starts_with_nocase: String
  user_starts_with: String
  user_starts_with_nocase: String
}

enum PayoutClaimed_orderBy {
  amount
  betId
  id
  poolId
  tokenType
  txHash
  user
}

type Pool {
  betsCloseAt: BigInt!
  category: String!
  closureCriteria: String!
  closureInstructions: String!
  createdAt: BigInt!
  creationTxHash: String!
  creatorId: String!
  creatorName: String!
  decisionTime: BigInt!
  id: ID!
  imageUrl: String!
  isDraw: Boolean!
  options: [String!]!
  originalTruthSocialPostId: String!
  pointsBetTotals: BigInt!
  pointsBetTotalsByOption: [BigInt!]!
  poolIntId: BigInt!
  question: String!
  status: PoolStatus!
  twitterPostId: String!
  usdcBetTotals: BigInt!
  usdcBetTotalsByOption: [BigInt!]!
  winningOption: BigInt!
}

type PoolClosed {
  decisionTime: BigInt!
  id: ID!
  poolId: BigInt!
  selectedOption: BigInt!
  txHash: String!
}

input PoolClosed_filter {
  """Filter for the block changed event."""
  _change_block: BlockChangedFilter
  and: [PoolClosed_filter]
  decisionTime: BigInt
  decisionTime_gt: BigInt
  decisionTime_gte: BigInt
  decisionTime_in: [BigInt!]
  decisionTime_lt: BigInt
  decisionTime_lte: BigInt
  decisionTime_not: BigInt
  decisionTime_not_in: [BigInt!]
  id: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_in: [ID!]
  or: [PoolClosed_filter]
  poolId: BigInt
  poolId_gt: BigInt
  poolId_gte: BigInt
  poolId_in: [BigInt!]
  poolId_lt: BigInt
  poolId_lte: BigInt
  poolId_not: BigInt
  poolId_not_in: [BigInt!]
  selectedOption: BigInt
  selectedOption_gt: BigInt
  selectedOption_gte: BigInt
  selectedOption_in: [BigInt!]
  selectedOption_lt: BigInt
  selectedOption_lte: BigInt
  selectedOption_not: BigInt
  selectedOption_not_in: [BigInt!]
  txHash: String
  txHash_contains: String
  txHash_contains_nocase: String
  txHash_ends_with: String
  txHash_ends_with_nocase: String
  txHash_gt: String
  txHash_gte: String
  txHash_in: [String!]
  txHash_lt: String
  txHash_lte: String
  txHash_not: String
  txHash_not_contains: String
  txHash_not_contains_nocase: String
  txHash_not_ends_with: String
  txHash_not_ends_with_nocase: String
  txHash_not_in: [String!]
  txHash_not_starts_with: String
  txHash_not_starts_with_nocase: String
  txHash_starts_with: String
  txHash_starts_with_nocase: String
}

enum PoolClosed_orderBy {
  decisionTime
  id
  poolId
  selectedOption
  txHash
}

type PoolCreated {
  betsCloseAt: BigInt!
  category: String!
  closureCriteria: String!
  closureInstructions: String!
  createdAt: BigInt!
  creatorId: String!
  creatorName: String!
  id: ID!
  imageUrl: String!
  options: [String!]!
  poolId: BigInt!
  question: String!
  txHash: String!
}

input PoolCreated_filter {
  """Filter for the block changed event."""
  _change_block: BlockChangedFilter
  and: [PoolCreated_filter]
  betsCloseAt: BigInt
  betsCloseAt_gt: BigInt
  betsCloseAt_gte: BigInt
  betsCloseAt_in: [BigInt!]
  betsCloseAt_lt: BigInt
  betsCloseAt_lte: BigInt
  betsCloseAt_not: BigInt
  betsCloseAt_not_in: [BigInt!]
  category: String
  category_contains: String
  category_contains_nocase: String
  category_ends_with: String
  category_ends_with_nocase: String
  category_gt: String
  category_gte: String
  category_in: [String!]
  category_lt: String
  category_lte: String
  category_not: String
  category_not_contains: String
  category_not_contains_nocase: String
  category_not_ends_with: String
  category_not_ends_with_nocase: String
  category_not_in: [String!]
  category_not_starts_with: String
  category_not_starts_with_nocase: String
  category_starts_with: String
  category_starts_with_nocase: String
  closureCriteria: String
  closureCriteria_contains: String
  closureCriteria_contains_nocase: String
  closureCriteria_ends_with: String
  closureCriteria_ends_with_nocase: String
  closureCriteria_gt: String
  closureCriteria_gte: String
  closureCriteria_in: [String!]
  closureCriteria_lt: String
  closureCriteria_lte: String
  closureCriteria_not: String
  closureCriteria_not_contains: String
  closureCriteria_not_contains_nocase: String
  closureCriteria_not_ends_with: String
  closureCriteria_not_ends_with_nocase: String
  closureCriteria_not_in: [String!]
  closureCriteria_not_starts_with: String
  closureCriteria_not_starts_with_nocase: String
  closureCriteria_starts_with: String
  closureCriteria_starts_with_nocase: String
  closureInstructions: String
  closureInstructions_contains: String
  closureInstructions_contains_nocase: String
  closureInstructions_ends_with: String
  closureInstructions_ends_with_nocase: String
  closureInstructions_gt: String
  closureInstructions_gte: String
  closureInstructions_in: [String!]
  closureInstructions_lt: String
  closureInstructions_lte: String
  closureInstructions_not: String
  closureInstructions_not_contains: String
  closureInstructions_not_contains_nocase: String
  closureInstructions_not_ends_with: String
  closureInstructions_not_ends_with_nocase: String
  closureInstructions_not_in: [String!]
  closureInstructions_not_starts_with: String
  closureInstructions_not_starts_with_nocase: String
  closureInstructions_starts_with: String
  closureInstructions_starts_with_nocase: String
  createdAt: BigInt
  createdAt_gt: BigInt
  createdAt_gte: BigInt
  createdAt_in: [BigInt!]
  createdAt_lt: BigInt
  createdAt_lte: BigInt
  createdAt_not: BigInt
  createdAt_not_in: [BigInt!]
  creatorId: String
  creatorId_contains: String
  creatorId_contains_nocase: String
  creatorId_ends_with: String
  creatorId_ends_with_nocase: String
  creatorId_gt: String
  creatorId_gte: String
  creatorId_in: [String!]
  creatorId_lt: String
  creatorId_lte: String
  creatorId_not: String
  creatorId_not_contains: String
  creatorId_not_contains_nocase: String
  creatorId_not_ends_with: String
  creatorId_not_ends_with_nocase: String
  creatorId_not_in: [String!]
  creatorId_not_starts_with: String
  creatorId_not_starts_with_nocase: String
  creatorId_starts_with: String
  creatorId_starts_with_nocase: String
  creatorName: String
  creatorName_contains: String
  creatorName_contains_nocase: String
  creatorName_ends_with: String
  creatorName_ends_with_nocase: String
  creatorName_gt: String
  creatorName_gte: String
  creatorName_in: [String!]
  creatorName_lt: String
  creatorName_lte: String
  creatorName_not: String
  creatorName_not_contains: String
  creatorName_not_contains_nocase: String
  creatorName_not_ends_with: String
  creatorName_not_ends_with_nocase: String
  creatorName_not_in: [String!]
  creatorName_not_starts_with: String
  creatorName_not_starts_with_nocase: String
  creatorName_starts_with: String
  creatorName_starts_with_nocase: String
  id: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_in: [ID!]
  imageUrl: String
  imageUrl_contains: String
  imageUrl_contains_nocase: String
  imageUrl_ends_with: String
  imageUrl_ends_with_nocase: String
  imageUrl_gt: String
  imageUrl_gte: String
  imageUrl_in: [String!]
  imageUrl_lt: String
  imageUrl_lte: String
  imageUrl_not: String
  imageUrl_not_contains: String
  imageUrl_not_contains_nocase: String
  imageUrl_not_ends_with: String
  imageUrl_not_ends_with_nocase: String
  imageUrl_not_in: [String!]
  imageUrl_not_starts_with: String
  imageUrl_not_starts_with_nocase: String
  imageUrl_starts_with: String
  imageUrl_starts_with_nocase: String
  options: [String!]
  options_contains: [String!]
  options_contains_nocase: [String!]
  options_not: [String!]
  options_not_contains: [String!]
  options_not_contains_nocase: [String!]
  or: [PoolCreated_filter]
  poolId: BigInt
  poolId_gt: BigInt
  poolId_gte: BigInt
  poolId_in: [BigInt!]
  poolId_lt: BigInt
  poolId_lte: BigInt
  poolId_not: BigInt
  poolId_not_in: [BigInt!]
  question: String
  question_contains: String
  question_contains_nocase: String
  question_ends_with: String
  question_ends_with_nocase: String
  question_gt: String
  question_gte: String
  question_in: [String!]
  question_lt: String
  question_lte: String
  question_not: String
  question_not_contains: String
  question_not_contains_nocase: String
  question_not_ends_with: String
  question_not_ends_with_nocase: String
  question_not_in: [String!]
  question_not_starts_with: String
  question_not_starts_with_nocase: String
  question_starts_with: String
  question_starts_with_nocase: String
  txHash: String
  txHash_contains: String
  txHash_contains_nocase: String
  txHash_ends_with: String
  txHash_ends_with_nocase: String
  txHash_gt: String
  txHash_gte: String
  txHash_in: [String!]
  txHash_lt: String
  txHash_lte: String
  txHash_not: String
  txHash_not_contains: String
  txHash_not_contains_nocase: String
  txHash_not_ends_with: String
  txHash_not_ends_with_nocase: String
  txHash_not_in: [String!]
  txHash_not_starts_with: String
  txHash_not_starts_with_nocase: String
  txHash_starts_with: String
  txHash_starts_with_nocase: String
}

enum PoolCreated_orderBy {
  betsCloseAt
  category
  closureCriteria
  closureInstructions
  createdAt
  creatorId
  creatorName
  id
  imageUrl
  options
  poolId
  question
  txHash
}

type PoolMediaSet {
  id: ID!
  imageUrl: String!
  pool: Pool!
  poolId: BigInt!
  txHash: String!
}

input PoolMediaSet_filter {
  """Filter for the block changed event."""
  _change_block: BlockChangedFilter
  and: [PoolMediaSet_filter]
  id: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_in: [ID!]
  imageUrl: String
  imageUrl_contains: String
  imageUrl_contains_nocase: String
  imageUrl_ends_with: String
  imageUrl_ends_with_nocase: String
  imageUrl_gt: String
  imageUrl_gte: String
  imageUrl_in: [String!]
  imageUrl_lt: String
  imageUrl_lte: String
  imageUrl_not: String
  imageUrl_not_contains: String
  imageUrl_not_contains_nocase: String
  imageUrl_not_ends_with: String
  imageUrl_not_ends_with_nocase: String
  imageUrl_not_in: [String!]
  imageUrl_not_starts_with: String
  imageUrl_not_starts_with_nocase: String
  imageUrl_starts_with: String
  imageUrl_starts_with_nocase: String
  or: [PoolMediaSet_filter]
  pool: String
  poolId: BigInt
  poolId_gt: BigInt
  poolId_gte: BigInt
  poolId_in: [BigInt!]
  poolId_lt: BigInt
  poolId_lte: BigInt
  poolId_not: BigInt
  poolId_not_in: [BigInt!]
  pool_: Pool_filter
  pool_contains: String
  pool_contains_nocase: String
  pool_ends_with: String
  pool_ends_with_nocase: String
  pool_gt: String
  pool_gte: String
  pool_in: [String!]
  pool_lt: String
  pool_lte: String
  pool_not: String
  pool_not_contains: String
  pool_not_contains_nocase: String
  pool_not_ends_with: String
  pool_not_ends_with_nocase: String
  pool_not_in: [String!]
  pool_not_starts_with: String
  pool_not_starts_with_nocase: String
  pool_starts_with: String
  pool_starts_with_nocase: String
  txHash: String
  txHash_contains: String
  txHash_contains_nocase: String
  txHash_ends_with: String
  txHash_ends_with_nocase: String
  txHash_gt: String
  txHash_gte: String
  txHash_in: [String!]
  txHash_lt: String
  txHash_lte: String
  txHash_not: String
  txHash_not_contains: String
  txHash_not_contains_nocase: String
  txHash_not_ends_with: String
  txHash_not_ends_with_nocase: String
  txHash_not_in: [String!]
  txHash_not_starts_with: String
  txHash_not_starts_with_nocase: String
  txHash_starts_with: String
  txHash_starts_with_nocase: String
}

enum PoolMediaSet_orderBy {
  id
  imageUrl
  pool
  poolId
  pool__betsCloseAt
  pool__category
  pool__closureCriteria
  pool__closureInstructions
  pool__createdAt
  pool__creationTxHash
  pool__creatorId
  pool__creatorName
  pool__decisionTime
  pool__id
  pool__imageUrl
  pool__isDraw
  pool__originalTruthSocialPostId
  pool__pointsBetTotals
  pool__poolIntId
  pool__question
  pool__status
  pool__twitterPostId
  pool__usdcBetTotals
  pool__winningOption
  txHash
}

enum PoolStatus {
  Graded
  None
  Pending
  Regraded
}

input Pool_filter {
  """Filter for the block changed event."""
  _change_block: BlockChangedFilter
  and: [Pool_filter]
  betsCloseAt: BigInt
  betsCloseAt_gt: BigInt
  betsCloseAt_gte: BigInt
  betsCloseAt_in: [BigInt!]
  betsCloseAt_lt: BigInt
  betsCloseAt_lte: BigInt
  betsCloseAt_not: BigInt
  betsCloseAt_not_in: [BigInt!]
  category: String
  category_contains: String
  category_contains_nocase: String
  category_ends_with: String
  category_ends_with_nocase: String
  category_gt: String
  category_gte: String
  category_in: [String!]
  category_lt: String
  category_lte: String
  category_not: String
  category_not_contains: String
  category_not_contains_nocase: String
  category_not_ends_with: String
  category_not_ends_with_nocase: String
  category_not_in: [String!]
  category_not_starts_with: String
  category_not_starts_with_nocase: String
  category_starts_with: String
  category_starts_with_nocase: String
  closureCriteria: String
  closureCriteria_contains: String
  closureCriteria_contains_nocase: String
  closureCriteria_ends_with: String
  closureCriteria_ends_with_nocase: String
  closureCriteria_gt: String
  closureCriteria_gte: String
  closureCriteria_in: [String!]
  closureCriteria_lt: String
  closureCriteria_lte: String
  closureCriteria_not: String
  closureCriteria_not_contains: String
  closureCriteria_not_contains_nocase: String
  closureCriteria_not_ends_with: String
  closureCriteria_not_ends_with_nocase: String
  closureCriteria_not_in: [String!]
  closureCriteria_not_starts_with: String
  closureCriteria_not_starts_with_nocase: String
  closureCriteria_starts_with: String
  closureCriteria_starts_with_nocase: String
  closureInstructions: String
  closureInstructions_contains: String
  closureInstructions_contains_nocase: String
  closureInstructions_ends_with: String
  closureInstructions_ends_with_nocase: String
  closureInstructions_gt: String
  closureInstructions_gte: String
  closureInstructions_in: [String!]
  closureInstructions_lt: String
  closureInstructions_lte: String
  closureInstructions_not: String
  closureInstructions_not_contains: String
  closureInstructions_not_contains_nocase: String
  closureInstructions_not_ends_with: String
  closureInstructions_not_ends_with_nocase: String
  closureInstructions_not_in: [String!]
  closureInstructions_not_starts_with: String
  closureInstructions_not_starts_with_nocase: String
  closureInstructions_starts_with: String
  closureInstructions_starts_with_nocase: String
  createdAt: BigInt
  createdAt_gt: BigInt
  createdAt_gte: BigInt
  createdAt_in: [BigInt!]
  createdAt_lt: BigInt
  createdAt_lte: BigInt
  createdAt_not: BigInt
  createdAt_not_in: [BigInt!]
  creationTxHash: String
  creationTxHash_contains: String
  creationTxHash_contains_nocase: String
  creationTxHash_ends_with: String
  creationTxHash_ends_with_nocase: String
  creationTxHash_gt: String
  creationTxHash_gte: String
  creationTxHash_in: [String!]
  creationTxHash_lt: String
  creationTxHash_lte: String
  creationTxHash_not: String
  creationTxHash_not_contains: String
  creationTxHash_not_contains_nocase: String
  creationTxHash_not_ends_with: String
  creationTxHash_not_ends_with_nocase: String
  creationTxHash_not_in: [String!]
  creationTxHash_not_starts_with: String
  creationTxHash_not_starts_with_nocase: String
  creationTxHash_starts_with: String
  creationTxHash_starts_with_nocase: String
  creatorId: String
  creatorId_contains: String
  creatorId_contains_nocase: String
  creatorId_ends_with: String
  creatorId_ends_with_nocase: String
  creatorId_gt: String
  creatorId_gte: String
  creatorId_in: [String!]
  creatorId_lt: String
  creatorId_lte: String
  creatorId_not: String
  creatorId_not_contains: String
  creatorId_not_contains_nocase: String
  creatorId_not_ends_with: String
  creatorId_not_ends_with_nocase: String
  creatorId_not_in: [String!]
  creatorId_not_starts_with: String
  creatorId_not_starts_with_nocase: String
  creatorId_starts_with: String
  creatorId_starts_with_nocase: String
  creatorName: String
  creatorName_contains: String
  creatorName_contains_nocase: String
  creatorName_ends_with: String
  creatorName_ends_with_nocase: String
  creatorName_gt: String
  creatorName_gte: String
  creatorName_in: [String!]
  creatorName_lt: String
  creatorName_lte: String
  creatorName_not: String
  creatorName_not_contains: String
  creatorName_not_contains_nocase: String
  creatorName_not_ends_with: String
  creatorName_not_ends_with_nocase: String
  creatorName_not_in: [String!]
  creatorName_not_starts_with: String
  creatorName_not_starts_with_nocase: String
  creatorName_starts_with: String
  creatorName_starts_with_nocase: String
  decisionTime: BigInt
  decisionTime_gt: BigInt
  decisionTime_gte: BigInt
  decisionTime_in: [BigInt!]
  decisionTime_lt: BigInt
  decisionTime_lte: BigInt
  decisionTime_not: BigInt
  decisionTime_not_in: [BigInt!]
  id: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_in: [ID!]
  imageUrl: String
  imageUrl_contains: String
  imageUrl_contains_nocase: String
  imageUrl_ends_with: String
  imageUrl_ends_with_nocase: String
  imageUrl_gt: String
  imageUrl_gte: String
  imageUrl_in: [String!]
  imageUrl_lt: String
  imageUrl_lte: String
  imageUrl_not: String
  imageUrl_not_contains: String
  imageUrl_not_contains_nocase: String
  imageUrl_not_ends_with: String
  imageUrl_not_ends_with_nocase: String
  imageUrl_not_in: [String!]
  imageUrl_not_starts_with: String
  imageUrl_not_starts_with_nocase: String
  imageUrl_starts_with: String
  imageUrl_starts_with_nocase: String
  isDraw: Boolean
  isDraw_in: [Boolean!]
  isDraw_not: Boolean
  isDraw_not_in: [Boolean!]
  options: [String!]
  options_contains: [String!]
  options_contains_nocase: [String!]
  options_not: [String!]
  options_not_contains: [String!]
  options_not_contains_nocase: [String!]
  or: [Pool_filter]
  originalTruthSocialPostId: String
  originalTruthSocialPostId_contains: String
  originalTruthSocialPostId_contains_nocase: String
  originalTruthSocialPostId_ends_with: String
  originalTruthSocialPostId_ends_with_nocase: String
  originalTruthSocialPostId_gt: String
  originalTruthSocialPostId_gte: String
  originalTruthSocialPostId_in: [String!]
  originalTruthSocialPostId_lt: String
  originalTruthSocialPostId_lte: String
  originalTruthSocialPostId_not: String
  originalTruthSocialPostId_not_contains: String
  originalTruthSocialPostId_not_contains_nocase: String
  originalTruthSocialPostId_not_ends_with: String
  originalTruthSocialPostId_not_ends_with_nocase: String
  originalTruthSocialPostId_not_in: [String!]
  originalTruthSocialPostId_not_starts_with: String
  originalTruthSocialPostId_not_starts_with_nocase: String
  originalTruthSocialPostId_starts_with: String
  originalTruthSocialPostId_starts_with_nocase: String
  pointsBetTotals: BigInt
  pointsBetTotalsByOption: [BigInt!]
  pointsBetTotalsByOption_contains: [BigInt!]
  pointsBetTotalsByOption_contains_nocase: [BigInt!]
  pointsBetTotalsByOption_not: [BigInt!]
  pointsBetTotalsByOption_not_contains: [BigInt!]
  pointsBetTotalsByOption_not_contains_nocase: [BigInt!]
  pointsBetTotals_gt: BigInt
  pointsBetTotals_gte: BigInt
  pointsBetTotals_in: [BigInt!]
  pointsBetTotals_lt: BigInt
  pointsBetTotals_lte: BigInt
  pointsBetTotals_not: BigInt
  pointsBetTotals_not_in: [BigInt!]
  poolIntId: BigInt
  poolIntId_gt: BigInt
  poolIntId_gte: BigInt
  poolIntId_in: [BigInt!]
  poolIntId_lt: BigInt
  poolIntId_lte: BigInt
  poolIntId_not: BigInt
  poolIntId_not_in: [BigInt!]
  question: String
  question_contains: String
  question_contains_nocase: String
  question_ends_with: String
  question_ends_with_nocase: String
  question_gt: String
  question_gte: String
  question_in: [String!]
  question_lt: String
  question_lte: String
  question_not: String
  question_not_contains: String
  question_not_contains_nocase: String
  question_not_ends_with: String
  question_not_ends_with_nocase: String
  question_not_in: [String!]
  question_not_starts_with: String
  question_not_starts_with_nocase: String
  question_starts_with: String
  question_starts_with_nocase: String
  status: PoolStatus
  status_in: [PoolStatus!]
  status_not: PoolStatus
  status_not_in: [PoolStatus!]
  twitterPostId: String
  twitterPostId_contains: String
  twitterPostId_contains_nocase: String
  twitterPostId_ends_with: String
  twitterPostId_ends_with_nocase: String
  twitterPostId_gt: String
  twitterPostId_gte: String
  twitterPostId_in: [String!]
  twitterPostId_lt: String
  twitterPostId_lte: String
  twitterPostId_not: String
  twitterPostId_not_contains: String
  twitterPostId_not_contains_nocase: String
  twitterPostId_not_ends_with: String
  twitterPostId_not_ends_with_nocase: String
  twitterPostId_not_in: [String!]
  twitterPostId_not_starts_with: String
  twitterPostId_not_starts_with_nocase: String
  twitterPostId_starts_with: String
  twitterPostId_starts_with_nocase: String
  usdcBetTotals: BigInt
  usdcBetTotalsByOption: [BigInt!]
  usdcBetTotalsByOption_contains: [BigInt!]
  usdcBetTotalsByOption_contains_nocase: [BigInt!]
  usdcBetTotalsByOption_not: [BigInt!]
  usdcBetTotalsByOption_not_contains: [BigInt!]
  usdcBetTotalsByOption_not_contains_nocase: [BigInt!]
  usdcBetTotals_gt: BigInt
  usdcBetTotals_gte: BigInt
  usdcBetTotals_in: [BigInt!]
  usdcBetTotals_lt: BigInt
  usdcBetTotals_lte: BigInt
  usdcBetTotals_not: BigInt
  usdcBetTotals_not_in: [BigInt!]
  winningOption: BigInt
  winningOption_gt: BigInt
  winningOption_gte: BigInt
  winningOption_in: [BigInt!]
  winningOption_lt: BigInt
  winningOption_lte: BigInt
  winningOption_not: BigInt
  winningOption_not_in: [BigInt!]
}

enum Pool_orderBy {
  betsCloseAt
  category
  closureCriteria
  closureInstructions
  createdAt
  creationTxHash
  creatorId
  creatorName
  decisionTime
  id
  imageUrl
  isDraw
  options
  originalTruthSocialPostId
  pointsBetTotals
  pointsBetTotalsByOption
  poolIntId
  question
  status
  twitterPostId
  usdcBetTotals
  usdcBetTotalsByOption
  winningOption
}

type Query {
  """Access to subgraph metadata"""
  _meta(block: Block_height): _Meta_
  bet(
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: Block_height
    id: ID!

    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): Bet
  betPlaced(
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: Block_height
    id: ID!

    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): BetPlaced
  betPlaceds(
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: Block_height
    first: Int = 100
    orderBy: BetPlaced_orderBy
    orderDirection: OrderDirection
    skip: Int = 0

    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
    where: BetPlaced_filter
  ): [BetPlaced!]!
  bets(
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: Block_height
    first: Int = 100
    orderBy: Bet_orderBy
    orderDirection: OrderDirection
    skip: Int = 0

    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
    where: Bet_filter
  ): [Bet!]!
  payoutClaimed(
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: Block_height
    id: ID!

    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): PayoutClaimed
  payoutClaimeds(
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: Block_height
    first: Int = 100
    orderBy: PayoutClaimed_orderBy
    orderDirection: OrderDirection
    skip: Int = 0

    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
    where: PayoutClaimed_filter
  ): [PayoutClaimed!]!
  pool(
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: Block_height
    id: ID!

    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): Pool
  poolClosed(
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: Block_height
    id: ID!

    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): PoolClosed
  poolCloseds(
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: Block_height
    first: Int = 100
    orderBy: PoolClosed_orderBy
    orderDirection: OrderDirection
    skip: Int = 0

    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
    where: PoolClosed_filter
  ): [PoolClosed!]!
  poolCreated(
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: Block_height
    id: ID!

    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): PoolCreated
  poolCreateds(
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: Block_height
    first: Int = 100
    orderBy: PoolCreated_orderBy
    orderDirection: OrderDirection
    skip: Int = 0

    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
    where: PoolCreated_filter
  ): [PoolCreated!]!
  poolMediaSet(
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: Block_height
    id: ID!

    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
  ): PoolMediaSet
  poolMediaSets(
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: Block_height
    first: Int = 100
    orderBy: PoolMediaSet_orderBy
    orderDirection: OrderDirection
    skip: Int = 0

    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
    where: PoolMediaSet_filter
  ): [PoolMediaSet!]!
  pools(
    """
    The block at which the query should be executed. Can either be a `{ hash: Bytes }` value containing a block hash, a `{ number: Int }` containing the block number, or a `{ number_gte: Int }` containing the minimum block number. In the case of `number_gte`, the query will be executed on the latest block only if the subgraph has progressed to or past the minimum block number. Defaults to the latest block when omitted.
    """
    block: Block_height
    first: Int = 100
    orderBy: Pool_orderBy
    orderDirection: OrderDirection
    skip: Int = 0

    """
    Set to `allow` to receive data even if the subgraph has skipped over errors while syncing.
    """
    subgraphError: _SubgraphErrorPolicy_! = deny
    where: Pool_filter
  ): [Pool!]!
}

"A string representation of microseconds UNIX timestamp (16 digits)\n"
scalar Timestamp

enum TokenType {
  Freedom
  USDC
}

type _Block_ {
  """The hash of the block"""
  hash: Bytes

  """The block number"""
  number: Int!

  """The hash of the parent block"""
  parentHash: Bytes

  """Integer representation of the timestamp stored in blocks for the chain"""
  timestamp: Int
}

"""The type for the top-level _meta field"""
type _Meta_ {
  "Information about a specific subgraph block. The hash of the block\nwill be null if the _meta field has a block constraint that asks for\na block number. It will be filled if the _meta field has no block constraint\nand therefore asks for the latest  block\n"
  block: _Block_!

  """The deployment ID"""
  deployment: String!

  """If `true`, the subgraph encountered indexing errors at some past block"""
  hasIndexingErrors: Boolean!
}

enum _SubgraphErrorPolicy_ {
  """Data will be returned even if the subgraph has indexing errors"""
  allow

  """
  If the subgraph has indexing errors, data will be omitted. The default.
  """
  deny
}