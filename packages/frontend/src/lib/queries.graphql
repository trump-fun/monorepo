# Fragments for reusable fields
fragment PoolFields on Pool {
  betsCloseAt
  category
  closureCriteria
  closureInstructions
  createdAt
  creationTxHash
  creatorId
  creatorName
  decisionTime
  id
  isDraw
  options
  pointsBetTotalsByOption
  poolIntId
  question
  status
  twitterPostId
  usdcBetTotalsByOption
  winningOption
  imageUrl
  originalTruthSocialPostId
  usdcBetTotals
  pointsBetTotals
}

fragment BetFields on Bet {
  amount
  betIntId
  createdAt
  id
  isPayedOut
  optionIndex
  outcome
  poolIntId
  tokenType
  txHash
  userAddress
}

# Queries
query GetPools(
  $filter: Pool_filter!
  $orderBy: Pool_orderBy!
  $orderDirection: OrderDirection!
  $first: Int
  $skip: Int
) {
  pools(
    where: $filter
    orderBy: $orderBy
    orderDirection: $orderDirection
    first: $first
    skip: $skip
  ) {
    ...PoolFields
  }
}

query GetPool($poolId: ID!) {
  pool(id: $poolId) {
    ...PoolFields
  }
}

query GetBets(
  $first: Int = 10
  $filter: Bet_filter!
  $orderBy: Bet_orderBy!
  $orderDirection: OrderDirection!
  $skip: Int = 0
) {
  bets(
    first: $first
    where: $filter
    orderBy: $orderBy
    orderDirection: $orderDirection
    skip: $skip
  ) {
    ...BetFields
    pool {
      ...PoolFields
    }
  }
}

query GetBetPlaced(
  $first: Int = 10
  $filter: BetPlaced_filter!
  $orderBy: BetPlaced_orderBy!
  $orderDirection: OrderDirection!
  $skip: Int = 0
) {
  betPlaceds(
    first: $first
    where: $filter
    orderBy: $orderBy
    orderDirection: $orderDirection
    skip: $skip
  ) {
    id
    betId
    poolId
    user
    optionIndex
    amount
    tokenType
  }
}

query GetPayoutClaimed(
  $first: Int = 100
  $skip: Int = 0
  $orderBy: PayoutClaimed_orderBy = id
  $orderDirection: OrderDirection = desc
  $where: PayoutClaimed_filter
) {
  payoutClaimeds(
    first: $first
    skip: $skip
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
  ) {
    id
    betId
    poolId
    user
    amount
    tokenType
  }
}
