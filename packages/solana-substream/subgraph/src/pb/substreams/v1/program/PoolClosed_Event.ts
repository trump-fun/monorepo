// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.3

import { Writer, Reader } from 'as-proto/assembly';

export class PoolClosed_Event {
  static encode(message: PoolClosed_Event, writer: Writer): void {
    writer.uint32(10);
    writer.string(message.trxHash);

    writer.uint32(16);
    writer.uint64(message.poolId);

    writer.uint32(24);
    writer.uint64(message.selectedOption);

    writer.uint32(32);
    writer.int64(message.decisionTime);
  }

  static decode(reader: Reader, length: i32): PoolClosed_Event {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new PoolClosed_Event();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.trxHash = reader.string();
          break;

        case 2:
          message.poolId = reader.uint64();
          break;

        case 3:
          message.selectedOption = reader.uint64();
          break;

        case 4:
          message.decisionTime = reader.int64();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  trxHash: string;
  poolId: u64;
  selectedOption: u64;
  decisionTime: i64;

  constructor(
    trxHash: string = '',
    poolId: u64 = 0,
    selectedOption: u64 = 0,
    decisionTime: i64 = 0
  ) {
    this.trxHash = trxHash;
    this.poolId = poolId;
    this.selectedOption = selectedOption;
    this.decisionTime = decisionTime;
  }
}
