// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.3

import { Writer, Reader } from 'as-proto/assembly';

export class GradeBet_Instruction {
  static encode(message: GradeBet_Instruction, writer: Writer): void {
    writer.uint32(10);
    writer.string(message.trxHash);

    writer.uint32(16);
    writer.uint64(message.responseOption);

    writer.uint32(26);
    writer.string(message.acctBettingPools);

    writer.uint32(34);
    writer.string(message.acctPool);

    writer.uint32(42);
    writer.string(message.acctAuthority);
  }

  static decode(reader: Reader, length: i32): GradeBet_Instruction {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new GradeBet_Instruction();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.trxHash = reader.string();
          break;

        case 2:
          message.responseOption = reader.uint64();
          break;

        case 3:
          message.acctBettingPools = reader.string();
          break;

        case 4:
          message.acctPool = reader.string();
          break;

        case 5:
          message.acctAuthority = reader.string();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  trxHash: string;
  responseOption: u64;
  acctBettingPools: string;
  acctPool: string;
  acctAuthority: string;

  constructor(
    trxHash: string = '',
    responseOption: u64 = 0,
    acctBettingPools: string = '',
    acctPool: string = '',
    acctAuthority: string = ''
  ) {
    this.trxHash = trxHash;
    this.responseOption = responseOption;
    this.acctBettingPools = acctBettingPools;
    this.acctPool = acctPool;
    this.acctAuthority = acctAuthority;
  }
}
